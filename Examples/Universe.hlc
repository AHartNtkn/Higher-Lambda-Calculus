module Universe where

import Unit


levelTest : (a : U[0]) . U[1]
  = (a : U[0]) . a

type : U[0] = (X : U[0]) (f : (T : U[0]) . X) . X
wr : (A : U[0]) . type
   = (A : U[0]) (X : U[0]) (f : (T : U[0]) . X) . f A
wr2 : type
    = (X : U[0]) (f : (T : U[0]) . X) . f X

--uwr : (t : type) . U[0]
--  = (t : type) . t U[0] ((A : U[0]) . A)

tUnit : type = wr unit

-- fun : (A : U[0]) (B : U[0]) (F : (a : A) . B) (tr : wr A) . wr B
--  = (A : U[0]) (B : U[0]) (F : (a : A) . B) (tr : wr A) (X : U[0]) (f : (T : U[0]) . X) . f B

-- tr : (X : U[0]) (f : (Z : U[0]) . X) . f A
-- tr unit ((Z : U[0]) . tt) 


{-
type : U1 = (X : U1) (f : (T : U0) . X) . X
wr : (A : U0) . type
   = (A : U0) (X : U1) (f : (T : U0) . X) . f A
uwr : (t : type) . U0
   = (t : type) . t U0 ((A : U0) . A)

-}


type' : U[0] = (X : U[0]) (f : (T : U[0]) . X) (f' : (T : U[0]) (t : T) . f T) . X
wr' : (A : U[0]) . type'
    = (A : U[0]) (X : U[0]) (f : (T : U[0]) . X) (f' : (T : U[0]) (t : T) . f T) . f A
wr2' : (A : U[0]) . type'
    = (A : U[0]) (X : U[0]) (f : (T : U[0]) . X) (f' : (T : U[0]) (t : T) . f T) . f X
term' : (A : U[0]) (a : A) . wr' A
  = (A : U[0]) (a : A) (X : U[0]) (f : (T : U[0]) . X) (f' : (T : U[0]) (t : T) . f T) . f' A a  -- f A

pi' : (A : U[0]) (B : U[0]) (F : (a : A) . B) . wr' ((a : A) . B)
   = (A : U[0]) (B : U[0]) (F : (a : A) . B) (X : U[0]) (f : (T : U[0]) . X) (f' : (T : U[0]) (t : T) . f T)
   . f' ((a : A) . B) F

-- app' : (A : U[0]) (B : U[0]) (wa : wr' A) (wf : wr' ((a : A) . B)) . wr' B
--  = (A : U[0]) (B : U[0]) (wa : wr' A) (wf : wr' ((a : A) . B)) . ??? 

-- (X : U[0]) (f : (T : U[0]) . X) (f' : (T : U[0]) (t : T) . f T) . f A
-- (X : U[0]) (f : (T : U[0]) . X) (f' : (T : U[0]) (t : T) . f T) . f (((a : A) . B))


-- f B



-- This fails to type-check, as it should.
-- levelTest2 : (a : U[1]) . U[0]
--  = (a : U[1]) . a



